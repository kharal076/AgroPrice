# Generated by Django 4.1.7 on 2023-12-09 06:33

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommodityPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('average', models.FloatField()),
                ('day', models.FloatField()),
                ('month', models.FloatField()),
                ('year', models.FloatField()),
                ('season_fall', models.BooleanField()),
                ('season_spring', models.BooleanField()),
                ('season_summer', models.BooleanField()),
                ('season_winter', models.BooleanField()),
                ('apple_jholey', models.BooleanField()),
                ('banana', models.BooleanField()),
                ('carrot_local', models.BooleanField()),
                ('cucumber_local', models.BooleanField()),
                ('garlic_dry_nepali', models.BooleanField()),
                ('lettuce', models.BooleanField()),
                ('onion_dry_indian', models.BooleanField()),
                ('potato_white', models.BooleanField()),
                ('tomato_big_nepali', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='OverallTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity', models.CharField(max_length=255)),
                ('percentage_change', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('unit', models.CharField(default=None, max_length=50)),
                ('minimum', models.DecimalField(decimal_places=2, max_digits=10)),
                ('maximum', models.DecimalField(decimal_places=2, max_digits=10)),
                ('average', models.DecimalField(decimal_places=2, max_digits=10)),
                ('season', models.CharField(choices=[('Spring', 'Spring'), ('Summer', 'Summer'), ('Fall', 'Fall'), ('Winter', 'Winter')], max_length=10)),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='price_prediction.commodity')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
